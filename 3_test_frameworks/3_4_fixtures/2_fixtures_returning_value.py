# Фикстуры, возвращающие значение
# Мы рассмотрели базовый подход к созданию фикстур,
# когда тестовые данные задаются и очищаются в setup и teardown методах.
# PyTest предлагает продвинутый подход к фикстурам, когда фикстуры можно задавать глобально,
# передавать их в тестовые методы как параметры, а также имеет набор встроенных фикстур.
# Это более гибкий и удобный способ работы со вспомогательными функциями,
# и сейчас вы сами увидите почему.

# Возвращаемое значение

# Фикстуры могут возвращать значение, которое затем можно использовать в тестах.
# Давайте перепишем наш предыдущий пример с использованием PyTest фикстур.
# Мы создадим фикстуру browser, которая будет создавать объект WebDriver.
# Этот объект мы сможем использовать в тестах для взаимодействия с браузером.
# Для этого мы напишем метод browser и укажем,
# что он является фикстурой с помощью декоратора @pytest.fixture.
# После этого мы можем вызывать фикстуру в тестах, передав ее как параметр.
# По умолчанию фикстура будет создаваться для каждого тестового метода,
# то есть для каждого теста запустится свой экземпляр браузера.

# pytest -s -v test_fixture2.py

# Вопрос по последнему селектору
# .basket-mini .btn-group > a

#  > значит ребенок первой степени вложенности, непосредственный то есть,
#  пробел значит дети любой степени вложенности на любом уровне, как дети, так и внуки и правнуки.
#  Всем советую колоду Anki по CSS-селекторам, чтобы выучить.
