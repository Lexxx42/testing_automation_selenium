# Немного о Code Style

# Среди тех, кто более или менее регулярно пишет код,
# существует определенное соглашение о "стиле кода".

# Стиль кода — это всё то, что не относится к его функциональности:
# форматирование, имена переменных, функций, констант и так далее.

# Python прекрасен тем, что его очень легко читать,
# но даже такой простой для понимания язык в своём коде можно превратить в нечитаемую кашу.

# Нечитаемая каша опасна тем, что вы не разберетесь в своем коде уже через пару недель,
# а другой человек не разберется никогда.
# Хорошо написанный код экономит время при починке тестов,
# при внедрении нового человека в команду, да и при написании нового кода тоже.
# В общем, это очень важная тема, и следует всегда помнить о читабельности кода.

# Мы совсем немного затронули эту тему в предыдущих модулях,
# а теперь, раз уж мы потихоньку идём в сторону большей абстракции,
# настало время поговорить об этом чуть более подробно.

# Отступы
# Отступы являются частью синтаксиса в Python и означают вложенность блока,
# будь то тело функции условного выражения, цикла, и так далее.
# Самое важное для нас в будущих шагах,
# что все функции внутри класса так же должны быть отделены отступом:

@pytest.mark.regression
# тест вне класса: отступа нет
def test_student_can_see_lesson_name_in_lesson_in_course_after_joining(self, driver):
    # все строки внутри теста с отступом
    page = CoursePromoPage(url=self.course.url, driver=driver)
    page.open()


class TestLessonNameInCourseForTeacher():
    @pytest.mark.regression
    # тест внутри класса, нужен дополнительный отступ
    def test_teacher_can_see_lesson_name_in_lesson_in_course(self, driver):
        # еще один отступ для каждой строки, и так с любым уровнем вложенности
        page = LessonPlayerPage(url=self.lesson_url, driver=driver)
        page.open()
        try:
            # плюс один отступ на каждый уровень вложенности
            dangerous_function()
        except:
            close_something()

# В некоторых теоретических шагах мы будем давать отдельно функции вне контекста классов,
# и вам придется расставлять отступы самостоятельно. Будьте готовы и не пугайтесь.

# Один отступ — это четыре пробела.
# Табуляции использовать нежелательно
# (исключение составляют ситуации, когда вы поддерживаете какой-то уже существующий код с табуляциями,
# в таком случае смешивать табуляции с пробелами не следует).
